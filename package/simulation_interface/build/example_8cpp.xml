<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="example_8cpp" kind="file" language="C++">
    <compoundname>example.cpp</compoundname>
    <includes local="no">simulation_api_schema.pb.h</includes>
    <includes local="no">chrono</includes>
    <includes local="no">memory</includes>
    <includes local="no">rclcpp/rclcpp.hpp</includes>
    <includes refid="conversions_8hpp" local="no">simulation_interface/conversions.hpp</includes>
    <includes refid="zmq__client_8hpp" local="no">simulation_interface/zmq_client.hpp</includes>
    <includes refid="zmq__multi__server_8hpp" local="no">simulation_interface/zmq_multi_server.hpp</includes>
    <includes refid="zmq__server_8hpp" local="no">simulation_interface/zmq_server.hpp</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="166">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="128">
        <label>geometry_msgs.pb.h</label>
      </node>
      <node id="162">
        <label>functional</label>
      </node>
      <node id="156">
        <label>rosgraph_msgs/msg/clock.hpp</label>
      </node>
      <node id="149">
        <label>openscenario_msgs/msg/entity_type.hpp</label>
      </node>
      <node id="141">
        <label>geometry_msgs/msg/twist.hpp</label>
      </node>
      <node id="132">
        <label>autoware_control_msgs/msg/control_command.hpp</label>
      </node>
      <node id="135">
        <label>builtin_interfaces/msg/duration.hpp</label>
      </node>
      <node id="151">
        <label>openscenario_msgs/msg/misc_object_parameters.hpp</label>
      </node>
      <node id="130">
        <label>rosgraph_msgs.pb.h</label>
      </node>
      <node id="150">
        <label>openscenario_msgs/msg/lanelet_pose.hpp</label>
      </node>
      <node id="144">
        <label>openscenario_msgs/msg/action_status.hpp</label>
      </node>
      <node id="148">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="139">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="129">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="167">
        <label>simulation_interface/zmq_server.hpp</label>
        <link refid="zmq__server_8hpp_source"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="126">
        <label>autoware_vehicle_msgs.pb.h</label>
      </node>
      <node id="158">
        <label>string</label>
      </node>
      <node id="154">
        <label>openscenario_msgs/msg/property.hpp</label>
      </node>
      <node id="147">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="159">
        <label>std_msgs/msg/header.hpp</label>
      </node>
      <node id="123">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="165">
        <label>simulation_interface/zmq_multi_server.hpp</label>
        <link refid="zmq__multi__server_8hpp_source"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>builtin_interfaces/msg/time.hpp</label>
      </node>
      <node id="142">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="145">
        <label>openscenario_msgs/msg/axle.hpp</label>
      </node>
      <node id="146">
        <label>openscenario_msgs/msg/axles.hpp</label>
      </node>
      <node id="133">
        <label>autoware_vehicle_msgs/msg/shift.hpp</label>
      </node>
      <node id="138">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="131">
        <label>std_msgs.pb.h</label>
      </node>
      <node id="160">
        <label>vector</label>
      </node>
      <node id="127">
        <label>builtin_interfaces.pb.h</label>
      </node>
      <node id="134">
        <label>autoware_vehicle_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="125">
        <label>autoware_control_msgs.pb.h</label>
      </node>
      <node id="143">
        <label>iostream</label>
      </node>
      <node id="157">
        <label>simulation_interface/constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp</label>
        <link refid="example_8cpp"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>chrono</label>
      </node>
      <node id="137">
        <label>geometry_msgs/msg/accel.hpp</label>
      </node>
      <node id="153">
        <label>openscenario_msgs/msg/performance.hpp</label>
      </node>
      <node id="140">
        <label>geometry_msgs/msg/quaternion.hpp</label>
      </node>
      <node id="163">
        <label>thread</label>
      </node>
      <node id="152">
        <label>openscenario_msgs/msg/pedestrian_parameters.hpp</label>
      </node>
      <node id="124">
        <label>simulation_interface/conversions.hpp</label>
        <link refid="conversions_8hpp_source"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>zmqpp/zmqpp.hpp</label>
      </node>
      <node id="120">
        <label>simulation_api_schema.pb.h</label>
      </node>
      <node id="122">
        <label>memory</label>
      </node>
      <node id="161">
        <label>simulation_interface/zmq_client.hpp</label>
        <link refid="zmq__client_8hpp_source"/>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classExampleNode" prot="public">ExampleNode</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="example_8cpp_1aead591d11ebde1719b5743edd43d391f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialize_callback</definition>
        <argsstring>(const simulation_api_schema::InitializeRequest &amp;, simulation_api_schema::InitializeResponse &amp;)</argsstring>
        <name>initialize_callback</name>
        <param>
          <type>const simulation_api_schema::InitializeRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::InitializeResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="26" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1ada03c45df62e264bbcf91555a8c7b4a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_frame_callback</definition>
        <argsstring>(const simulation_api_schema::UpdateFrameRequest &amp;, simulation_api_schema::UpdateFrameResponse &amp;)</argsstring>
        <name>update_frame_callback</name>
        <param>
          <type>const simulation_api_schema::UpdateFrameRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::UpdateFrameResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="31" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a4da037c39de9ae420706332745828b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_sensor_frame_callback</definition>
        <argsstring>(const simulation_api_schema::UpdateSensorFrameRequest &amp;, simulation_api_schema::UpdateSensorFrameResponse &amp;)</argsstring>
        <name>update_sensor_frame_callback</name>
        <param>
          <type>const simulation_api_schema::UpdateSensorFrameRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::UpdateSensorFrameResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="36" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a359eceb4ff3de50ccaa439555e3696ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spawn_misc_object_entity_callback</definition>
        <argsstring>(const simulation_api_schema::SpawnMiscObjectEntityRequest &amp;, simulation_api_schema::SpawnMiscObjectEntityResponse &amp;)</argsstring>
        <name>spawn_misc_object_entity_callback</name>
        <param>
          <type>const simulation_api_schema::SpawnMiscObjectEntityRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::SpawnMiscObjectEntityResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="42" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1ab9fd2ef0c4299ea288a4968f4feb9744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spawn_vehicle_entity_callback</definition>
        <argsstring>(const simulation_api_schema::SpawnVehicleEntityRequest &amp;, simulation_api_schema::SpawnVehicleEntityResponse &amp;)</argsstring>
        <name>spawn_vehicle_entity_callback</name>
        <param>
          <type>const simulation_api_schema::SpawnVehicleEntityRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::SpawnVehicleEntityResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="48" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a7f34ed414516cd064d14b037c527122e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void spawn_pedestrian_entity_callback</definition>
        <argsstring>(const simulation_api_schema::SpawnPedestrianEntityRequest &amp;, simulation_api_schema::SpawnPedestrianEntityResponse &amp;)</argsstring>
        <name>spawn_pedestrian_entity_callback</name>
        <param>
          <type>const simulation_api_schema::SpawnPedestrianEntityRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::SpawnPedestrianEntityResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="54" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1afbb02754df45544c419403100f5d1ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void despawn_entity_callback</definition>
        <argsstring>(const simulation_api_schema::DespawnEntityRequest &amp;, simulation_api_schema::DespawnEntityResponse &amp;)</argsstring>
        <name>despawn_entity_callback</name>
        <param>
          <type>const simulation_api_schema::DespawnEntityRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::DespawnEntityResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="60" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a2d6adc0ce3ae1daa232368860748c661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void attach_lidar_sensor_callback</definition>
        <argsstring>(const simulation_api_schema::AttachLidarSensorRequest &amp;, simulation_api_schema::AttachLidarSensorResponse &amp;)</argsstring>
        <name>attach_lidar_sensor_callback</name>
        <param>
          <type>const simulation_api_schema::AttachLidarSensorRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::AttachLidarSensorResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="66" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a9d802d35b0504b7766a8117346a8e5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void attach_detection_sensor_callback</definition>
        <argsstring>(const simulation_api_schema::AttachDetectionSensorRequest &amp;, simulation_api_schema::AttachDetectionSensorResponse &amp;)</argsstring>
        <name>attach_detection_sensor_callback</name>
        <param>
          <type>const simulation_api_schema::AttachDetectionSensorRequest &amp;</type>
        </param>
        <param>
          <type>simulation_api_schema::AttachDetectionSensorResponse &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="72" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1ac3f6d5835ca3690a94f83af6dc2c290b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_entity_status_callback</definition>
        <argsstring>(const simulation_api_schema::UpdateEntityStatusRequest &amp;req, simulation_api_schema::UpdateEntityStatusResponse &amp;res)</argsstring>
        <name>update_entity_status_callback</name>
        <param>
          <type>const simulation_api_schema::UpdateEntityStatusRequest &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>simulation_api_schema::UpdateEntityStatusResponse &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="78" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="example_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" line="138" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp" bodystart="138" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_api_schema.pb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp/rclcpp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_interface/conversions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_interface/zmq_client.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_interface/zmq_multi_server.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_interface/zmq_server.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize_callback(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::InitializeRequest<sp/>&amp;,<sp/>simulation_api_schema::InitializeResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_frame_callback(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::UpdateFrameRequest<sp/>&amp;,<sp/>simulation_api_schema::UpdateFrameResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_sensor_frame_callback(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::UpdateSensorFrameRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>simulation_api_schema::UpdateSensorFrameResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spawn_misc_object_entity_callback(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::SpawnMiscObjectEntityRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>simulation_api_schema::SpawnMiscObjectEntityResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spawn_vehicle_entity_callback(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::SpawnVehicleEntityRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>simulation_api_schema::SpawnVehicleEntityResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>spawn_pedestrian_entity_callback(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::SpawnPedestrianEntityRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>simulation_api_schema::SpawnPedestrianEntityResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>despawn_entity_callback(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::DespawnEntityRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>simulation_api_schema::DespawnEntityResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>attach_lidar_sensor_callback(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::AttachLidarSensorRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>simulation_api_schema::AttachLidarSensorResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>attach_detection_sensor_callback(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::AttachDetectionSensorRequest<sp/>&amp;,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>simulation_api_schema::AttachDetectionSensorResponse<sp/>&amp;)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_entity_status_callback(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>simulation_api_schema::UpdateEntityStatusRequest<sp/>&amp;<sp/>req,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>simulation_api_schema::UpdateEntityStatusResponse<sp/>&amp;<sp/>res)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;------<sp/>Request<sp/>------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>req.PrintDebugString();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>simulation_api_schema::UpdateEntityStatusResponse();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>res.mutable_result()-&gt;set_success(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;------<sp/>Response<sp/>------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>res.PrintDebugString();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classExampleNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classExampleNode" kindref="compound">ExampleNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>rclcpp::Node</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classExampleNode" kindref="compound">ExampleNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::NodeOptions<sp/>&amp;<sp/>option)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>:<sp/>Node(</highlight><highlight class="stringliteral">&quot;example&quot;</highlight><highlight class="normal">,<sp/>option),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>server_(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simulation_interface::TransportProtocol::TCP,<sp/>simulation_interface::HostName::ANY,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initialize_callback,<sp/>update_frame_callback,<sp/>update_sensor_frame_callback,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spawn_vehicle_entity_callback,<sp/>spawn_pedestrian_entity_callback,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spawn_misc_object_entity_callback,<sp/>despawn_entity_callback,<sp/>update_entity_status_callback,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>attach_lidar_sensor_callback,<sp/>attach_detection_sensor_callback),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>client_(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simulation_interface::TransportProtocol::TCP,<sp/>simulation_interface::HostName::LOCLHOST,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simulation_interface::ports::update_entity_status),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>init_client_(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simulation_interface::TransportProtocol::TCP,<sp/>simulation_interface::HostName::LOCLHOST,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>simulation_interface::ports::initialize)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::chrono_literals;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>update_timer_<sp/>=<sp/>this-&gt;create_wall_timer(250ms,<sp/>std::bind(&amp;ExampleNode::sendRequest,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendRequest()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_api_schema::UpdateEntityStatusRequest<sp/>request;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>status;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>status.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>status.type.type<sp/>=<sp/>openscenario_msgs::msg::EntityType::EGO;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::EntityStatus<sp/>proto;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_interface::toProto(status,<sp/>proto);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_api_schema::UpdateEntityStatusResponse<sp/>response;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>*request.add_status()<sp/>=<sp/>proto;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>client_.call(request,<sp/>response);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>init_res<sp/>=<sp/>simulation_api_schema::InitializeResponse();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>init_client_.call(simulation_api_schema::InitializeRequest(),<sp/>init_res);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>rclcpp::TimerBase::SharedPtr<sp/>update_timer_;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classzeromq_1_1MultiServer" kindref="compound">zeromq::MultiServer</ref><sp/>server_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classzeromq_1_1Client" kindref="compound">zeromq::Client</ref>&lt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_api_schema::UpdateEntityStatusRequest,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_api_schema::UpdateEntityStatusResponse&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>client_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classzeromq_1_1Client" kindref="compound">zeromq::Client</ref>&lt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_api_schema::InitializeRequest,<sp/>simulation_api_schema::InitializeResponse&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>init_client_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[])</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>rclcpp::init(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>rclcpp::NodeOptions<sp/>options;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>component<sp/>=<sp/>std::make_shared&lt;ExampleNode&gt;(options);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>component-&gt;sendRequest();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>rclcpp::spin(component);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>rclcpp::shutdown();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/src/example.cpp"/>
  </compounddef>
</doxygen>
